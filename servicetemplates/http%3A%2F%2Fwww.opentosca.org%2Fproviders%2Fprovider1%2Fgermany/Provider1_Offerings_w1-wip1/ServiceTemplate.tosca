<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Definitions xmlns="http://docs.oasis-open.org/tosca/ns/2011/12" xmlns:winery="http://www.opentosca.org/winery/extensions/tosca/2013/02/12" xmlns:selfservice="http://www.eclipse.org/winery/model/selfservice" xmlns:testwineryopentoscaorg="http://test.winery.opentosca.org" targetNamespace="http://www.opentosca.org/providers/aws/germany" id="winery-defs-for_germany-Provider1_Offerings_w1-wip1">
    <ServiceTemplate name="Provider1_Offerings_w1-wip1" targetNamespace="http://www.opentosca.org/providers/aws/germany" id="Provider1_Offerings_w1-wip1">
        <TopologyTemplate>
            <NodeTemplate xmlns:ntyIgeneral1="http://plain.winery.opentosca.org/placement/nodetypes" name="CloudProvider1_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral1:CloudProvider1_w1-wip1" id="CloudProvider1_w1-wip1" winery:x="546" winery:y="381">
                <Capabilities>
                    <Capability xmlns:ctyIgeneral="http://plain.winery.opentosca.org/placement/capabilitytypes" name="CapCanHostUbuntuVM" type="ctyIgeneral:CapCanHostUbuntuVM" id="CapCanHostUbuntuVM"/>
                </Capabilities>
            </NodeTemplate>
            <NodeTemplate xmlns:ntyIgeneral1="http://plain.winery.opentosca.org/placement/nodetypes" name="Ubuntu_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral1:Ubuntu_w1-wip1" id="Ubuntu_w1-wip1" winery:x="552" winery:y="115">
                <Requirements>
                    <Requirement xmlns:rtyIgeneral="http://plain.winery.opentosca.org/placement/requirementtypes" name="ReqCanHostUbuntuVM" type="rtyIgeneral:ReqCanHostUbuntuVM" id="ReqCanHostUbuntuVM"/>
                </Requirements>
                <Capabilities>
                    <Capability xmlns:ctyIgeneral="http://plain.winery.opentosca.org/placement/capabilitytypes" name="CapCanHostProcessingComponent" type="ctyIgeneral:CapCanHostProcessingComponent" id="CapCanHostProcessingComponent"/>
                </Capabilities>
            </NodeTemplate>
        </TopologyTemplate>
    </ServiceTemplate>
</Definitions>
